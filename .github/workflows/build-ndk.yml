name: NDK build PR

on:
  workflow_dispatch:
  pull_request:

env:
     module_id: SongBrowser
     version_num: 0.1.0
    
jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        submodules: true
        lfs: true

    - uses: seanmiddleditch/gha-setup-ninja@v3
    
    - name: Extract branch name
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      id: extract_branch

    # extract branch name on pull request
    - name: Print branch name
      if: github.event_name == 'pull_request'
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

    - name: Set version
      run: echo "version=$(echo $version_num-$BRANCH_NAME.${{ github.run_number }})" >> $GITHUB_ENV

    # print branch name and version
    - name: Get branch name
      run: |
        echo 'The branch name is' $BRANCH_NAME
        echo 'The version is' $version
    - name: Create ndkpath.txt
      run: |
        echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
    - name: Get QPM
      if: steps.cache-qpm.outputs.cache-hit != 'true'
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: cargo-build.yml
        name: linux-qpm-rust
        path: QPM
        repo: RedBrumbler/QuestPackageManager-Rust
        
    - name: QPM Collapse
      run: |
        chmod +x ./QPM/qpm-rust
        ./QPM/qpm-rust collapse
        
    - name: QPM Dependencies Cache
      id: cache-qpm-deps
      uses: actions/cache@v2
      env:
        cache-name: cache-qpm-deps
      with:
        path: /home/runner/.local/share/QPM-Rust/cache
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('qpm.json', '.github/BuildQSounds.yml') }}
        restore-keys: |
          ${{ runner.os }}-${{ env.cache-name }}-
          ${{ runner.os }}-${{ env.cache-name }}
      
    - name: QPM Restore
      run: |
        ./QPM/qpm-rust restore
    - name: Check dependency Folders
      run: |
        echo "Checking extern includes"
        ls -lh ${GITHUB_WORKSPACE}/extern/includes
        echo ""
        echo "Checking libs"
        ls -lh ${GITHUB_WORKSPACE}/extern/libs
        echo ""
        echo "Checking QPM-Rust/cache Folder"
        ls -lh $HOME/.local/share/QPM-Rust/cache
        echo ""
    - name: Build
      run: |
        cd ${GITHUB_WORKSPACE}
        ./QPM/qpm-rust package edit --version ${{ env.version }}
        ./QPM/qpm-rust qmod build
        pwsh -Command ./build.ps1 --actions
    - name: Get Library Name
      id: libname
      run: |
        cd ./build/
        pattern="lib${module_id}*.so"
        files=( $pattern )
        echo ::set-output name=NAME::"${files[0]}"
    - name: Package QMOD
      run: |
        cd ${GITHUB_WORKSPACE}
        pwsh -Command ./buildQMOD.ps1 -package
    - name: Upload non-debug artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.libname.outputs.NAME }}
        path: ./build/${{ steps.libname.outputs.NAME }}
        if-no-files-found: error


    - name: Upload debug artifact
      uses: actions/upload-artifact@v2
      with:
        name: debug_${{ steps.libname.outputs.NAME }}
        path: ./build/debug/${{ steps.libname.outputs.NAME }}
        if-no-files-found: error


    - name: Upload QMOD
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.module_id }}-(UNZIP-for-QMOD).qmod
        path: ./${{ env.module_id }}_${{ env.version }}.qmod
        if-no-files-found: warn
